{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "title": "Button",
  "author": "Actabl Design",
  "description": "A customizable button component with support for icons, variants, and sizes.",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/bellhop/components/ui/button.tsx",
      "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-lg font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-auto shrink-0 [&_svg]:shrink-0 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-ring/90 aria-invalid:ring-destructive/20\",\n\n  {\n    variants: {\n      variant: {\n        default:\n        \"bg-indigo-600 text-primary-foreground hover:bg-indigo-700 focus-visible:ring-indigo-600/60\",\n\n        secondaryBrand:\n        \"bg-indigo-50 text-primary hover:bg-indigo-100\",\n\n        secondary:\n        \"bg-secondary text-secondary-foreground hover:bg-gray-300\",\n\n        outlineBrand:\n        \"border border-indigo-300 text-primary hover:bg-indigo-100\",\n\n        outline:\n        \"border border-neutral-600/20 bg-transparent text-secondary-foreground hover:bg-gray-200/50 \",\n\n        destructive:\n        \"bg-destructive text-white hover:bg-red-800 focus-visible:ring-destructive/60\",\n\n        destructiveOutline:\n        \"border border-red-300 text-destructive hover:bg-red-50 focus-visible:ring-destructive/60\",\n\n        success:\n        \"bg-success text-white hover:bg-green-800 focus-visible:ring-success/60\",\n\n        successOutline:\n        \"border border-green-300 text-success hover:bg-green-50 focus-visible:ring-success/60\",\n\n        ghost:\n        \" text-secondary-foreground hover:bg-accent hover:bg-gray-200/50 \",\n\n        link: \"text-primary underline-offset-4 hover:underline p-0 h-auto\",\n      },\n      size: {\n        md: \"h-10 px-4 py-2 [&_svg:not([class*='size-'])]:size-5\",\n        sm: \"h-8 px-3 py-1.5 text-xs gap-1.5 [&_svg:not([class*='size-'])]:size-4\",\n        lg: \"h-12 px-5 py-2.5 text-base [&_svg:not([class*='size-'])]:size-5\",\n        \"icon-sm\": \"size-9 p-0 [&_svg:not([class*='size-'])]:size-4\", // 36x36 with 16px icon\n        \"icon-md\": \"size-10 p-0 [&_svg:not([class*='size-'])]:size-5\", // 40x40 with 20px icon\n        \"icon-lg\": \"size-12 p-0 [&_svg:not([class*='size-'])]:size-5\", // 48x48 with 20px icon\n      },\n      iconPosition: {\n        left: \"flex-row\",\n        right: \"flex-row\",\n      },\n      fullWidth: {\n        true: \"w-full\",\n      },\n      // New variants for handling icon padding\n      hasStartIcon: {\n        true: \"\",\n      },\n      hasEndIcon: {\n        true: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n      iconPosition: \"left\",\n      fullWidth: false,\n      hasStartIcon: false,\n      hasEndIcon: false,\n    },\n    compoundVariants: [\n      // Adjust spacing when icons are present\n      {\n        iconPosition: \"left\",\n        size: \"sm\",\n        class: \"gap-1\", // 4px\n      },\n      {\n        iconPosition: \"right\",\n        size: \"sm\",\n        class: \"gap-1\", // 4px\n      },\n      {\n        iconPosition: \"left\",\n        size: \"md\",\n        class: \"gap-1\", // 4px\n      },\n      {\n        iconPosition: \"right\",\n        size: \"md\",\n        class: \"gap-1\", // 4px\n      },\n      {\n        iconPosition: \"left\",\n        size: \"lg\",\n        class: \"gap-1.5\", // 6px\n      },\n      {\n        iconPosition: \"right\",\n        size: \"lg\",\n        class: \"gap-1.5\", // 6px\n      },\n      \n      // Adjust padding for buttons with icons\n      // Small button with start icon (reduced left padding)\n      {\n        size: \"sm\",\n        hasStartIcon: true,\n        class: \"pl-2.5 pr-3\", // 10px left, 12px right\n      },\n      // Small button with end icon (reduced right padding)\n      {\n        size: \"sm\",\n        hasEndIcon: true,\n        class: \"pl-3 pr-2.5\", // 12px left, 10px right\n      },\n      // Medium button with start icon (reduced left padding)\n      {\n        size: \"md\",\n        hasStartIcon: true,\n        class: \"pl-3.5 pr-4\", // 14px left, 16px right\n      },\n      // Medium button with end icon (reduced right padding)\n      {\n        size: \"md\",\n        hasEndIcon: true,\n        class: \"pl-4 pr-3.5\", // 16px left, 14px right\n      },\n      // Large button with start icon (reduced left padding)\n      {\n        size: \"lg\",\n        hasStartIcon: true,\n        class: \"pl-4 pr-5\", // 16px left, 20px right\n      },\n      // Large button with end icon (reduced right padding)\n      {\n        size: \"lg\",\n        hasEndIcon: true,\n        class: \"pl-5 pr-4\", // 20px left, 16px right\n      },\n      // Handle both start and end icons\n      {\n        hasStartIcon: true,\n        hasEndIcon: true,\n        size: \"sm\",\n        class: \"pl-2.5 pr-2.5\", // 10px both sides\n      },\n      {\n        hasStartIcon: true,\n        hasEndIcon: true,\n        size: \"md\",\n        class: \"pl-3.5 pr-3.5\", // 14px both sides\n      },\n      {\n        hasStartIcon: true,\n        hasEndIcon: true,\n        size: \"lg\",\n        class: \"pl-4 pr-4\", // 16px both sides\n      },\n      // Link variant with icons should have appropriate spacing but no padding/height\n      {\n        variant: \"link\",\n        hasStartIcon: true,\n        class: \"gap-1.5 p-0 h-auto\",\n      },\n      {\n        variant: \"link\",\n        hasEndIcon: true,\n        class: \"gap-1.5 p-0 h-auto\",\n      },\n    ],\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      fullWidth,\n      asChild = false,\n      startIcon,\n      endIcon,\n      children,\n      iconPosition: iconPositionProp,\n      ...props // Destructure props to exclude startIcon and endIcon\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n\n    // Fix the icon position logic\n    const iconPosition = iconPositionProp || (endIcon && !startIcon ? \"right\" : \"left\");\n\n    const hasStartIcon = Boolean(startIcon);\n    const hasEndIcon = Boolean(endIcon);\n    const isIconOnly = !children && (hasStartIcon || hasEndIcon);\n    const isLink = variant === \"link\";\n\n    // Automatically select icon size variant if it's an icon-only button\n    let effectiveSize = size;\n    if (isIconOnly && !String(size).startsWith(\"icon-\") && !isLink) {\n      if (size === \"sm\") effectiveSize = \"icon-sm\";\n      else if (size === \"lg\") effectiveSize = \"icon-lg\";\n      else effectiveSize = \"icon-md\"; // Default to medium if unspecified\n    }\n\n    return (\n      <Comp\n        className={cn(\n          buttonVariants({\n            variant,\n            size: effectiveSize,\n            fullWidth,\n            iconPosition,\n            hasStartIcon: !isIconOnly && hasStartIcon,\n            hasEndIcon: !isIconOnly && hasEndIcon,\n            className,\n          })\n        )}\n        ref={ref}\n        {...props} // Spread remaining props (excluding startIcon and endIcon)\n      >\n        {isIconOnly ? (\n          <span className=\"flex items-center justify-center\">\n            {startIcon || endIcon}\n          </span>\n        ) : (\n          <>\n            {iconPosition === \"left\" && hasStartIcon && (\n              <span className=\"shrink-0\">{startIcon}</span>\n            )}\n            {children}\n            {iconPosition === \"right\" && hasEndIcon && (\n              <span className=\"shrink-0\">{endIcon}</span>\n            )}\n          </>\n        )}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}