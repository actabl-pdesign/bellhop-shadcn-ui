{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "bellhop-container",
  "type": "registry:component",
  "title": "Bellhop Container",
  "author": "Actabl Design",
  "description": "A container component for the Bellhop application, including a header, side menu, and a data table.",
  "dependencies": [
    "lucide-react",
    "@heroicons/react"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/featured-icon.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/sidemenu-legacy.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/header-legacy.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/data-table.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/columns.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/button.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/badge.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/sonner.json",
    "https://raw.githubusercontent.com/actabl-pdesign/bellhop-shadcn-ui/refs/heads/main/public/r/theme.json"
  ],
  "files": [
    {
      "path": "registry/bellhop/blocks/bellhop-container/page.tsx",
      "content": "\"use client\";\n\nimport \"./bellhop.css\"\nimport * as React from \"react\";\n\nimport { columns } from \"@/components/columns\";\nimport { DataTable } from \"@/components/data-table\";\n\nimport { SideMenu } from \"@/components/sidemenu-legacy\";\nimport HeaderLegacy from \"@/components/header-legacy\";\n\nconst data =[\n  {\n    id: \"Task-5101\",\n    taskName: \"Finalize Q3 report\",\n    status: \"Pending\",\n    dueDate: \"2024-08-01\",\n    assignedTo: \"Alice\",\n    priority: \"High\",\n  },\n  {\n    id: \"Task-5102\",\n    taskName: \"Client follow-up call\",\n    status: \"In Progress\",\n    dueDate: \"2024-07-29\",\n    assignedTo: \"Bob\",\n    priority: \"Medium\",\n  },\n  {\n    id: \"Task-5103\",\n    taskName: \"Update website copy\",\n    status: \"Done\",\n    dueDate: \"2024-07-22\",\n    assignedTo: \"Charlie\",\n    priority: \"Low\",\n  },\n  {\n    id: \"Task-5104\",\n    taskName: \"Prepare presentation slides\",\n    status: \"Pending\",\n    dueDate: \"2024-08-05\",\n    assignedTo: \"Alice\",\n    priority: \"High\",\n  },\n  {\n    id: \"Task-5105\",\n    taskName: \"System maintenance check\",\n    status: \"In Progress\",\n    dueDate: \"2024-07-30\",\n    assignedTo: \"David\",\n    priority: \"Medium\",\n  },\n  {\n    id: \"Task-5106\",\n    taskName: \"Organize team meeting\",\n    status: \"Pending\",\n    dueDate: \"2024-08-10\",\n    assignedTo: \"Eve\",\n    priority: \"Low\",\n  },\n  {\n    id: \"Task-5107\",\n    taskName: \"Review project proposal\",\n    status: \"Done\",\n    dueDate: \"2024-07-20\",\n    assignedTo: \"Frank\",\n    priority: \"Medium\",\n  },\n  {\n    id: \"Task-5108\",\n    taskName: \"Develop new feature\",\n    status: \"In Progress\",\n    dueDate: \"2024-08-15\",\n    assignedTo: \"Grace\",\n    priority: \"High\",\n  },\n  {\n    id: \"Task-5109\",\n    taskName: \"Fix security vulnerabilities\",\n    status: \"Pending\",\n    dueDate: \"2024-08-12\",\n    assignedTo: \"Alice\",\n    priority: \"High\",\n  },\n  {\n    id: \"Task-5110\",\n    taskName: \"Update user documentation\",\n    status: \"Done\",\n    dueDate: \"2024-07-25\",\n    assignedTo: \"Bob\",\n    priority: \"Low\",\n  }\n];\n\nexport default function Page() {\n return (\n    <div className=\"flex flex-col h-screen bg-muted/80\">\n      <HeaderLegacy logoVariant=\"psSymbol\" />\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        <div className=\"flex-none bg-sidebar-background shadow-md\">\n          <SideMenu variant=\"ps\" />\n        </div>\n\n        <div className=\"flex-1 p-4 md:gap-6 md:p-6 overflow-y-auto\">\n          <div className=\"flex flex-col p-4 lg:p-6 gap-4 bg-card rounded-xl shadow-md\">\n            <div className=\"page-header relative\">\n              <h1 className=\"text-xl font-semibold\">Tasks</h1>\n              <p className=\"text-xs font-regular text-muted-foreground\">Follow your daily tasks and make the most of your day.</p>\n            </div>\n            <div>\n              <DataTable data={data} columns={columns} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "app/page.tsx"
    },
    {
      "path": "registry/bellhop/blocks/bellhop-container/components/sidemenu-legacy.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { Landmark, Home, Calendar, Calculator, CircleDollarSign, BarChart, AreaChart, Settings, TrendingUp, BookOpen } from \"lucide-react\";\n\ntype SideMenuVariant = \"he\" | \"ps\" | \"tr\";\n\ninterface SideMenuProps {\n  variant: SideMenuVariant;\n}\n\nconst menuItems = {\n  ps: [\n    { label: \"Corp Reports\", icon: Landmark },\n    { label: \"Site Reports\", icon: Home },\n    { label: \"Daily\", icon: Calendar },\n    { label: \"Budget\", icon: CircleDollarSign },\n    { label: \"Forecast\", icon: TrendingUp },\n    { label: \"Accounting\", icon: Calculator },\n    { label: \"ProfitPace\", icon: AreaChart },\n    { label: \"ProfitPlan\", icon: BarChart },\n    { label: \"Admin\", icon: Settings },\n\n  ],\n  he: [\n    { label: \"Budget\", icon: Calculator },\n    { label: \"Forecast\", icon: Calculator },\n  ],\n  tr: [\n    { label: \"Admin\", icon: Settings },\n  ],\n  footer: [{ label: \"Help\", icon: BookOpen }, { label: \"Admin\", icon: Settings },],\n};\n\nexport function SideMenu({ variant }: SideMenuProps) {\n  const variantItems = menuItems[variant] || [];\n\n  return (\n    <div\n      className={cn(\n        \"bg-sidebar-background group-data-[variant=floating]:border-sidebar-border flex h-full min-h-0 flex-col p-1\",\n        variant === \"he\" && \"w-15\",\n        variant === \"ps\" && \"w-24 bg-white pt-2\",\n        variant === \"tr\" && \"w-12\"\n      )}\n    >\n      <div className=\"flex min-h-0 flex-1 flex-col gap-2 overflow-auto\">\n        {variantItems.map((item, index) => (\n          <span\n            key={index}\n            className=\"flex flex-col items-center justify-start w-full px-2 py-2 rounded-md text-sidebar-foreground hover:text-indigo-700 hover:bg-indigo-100 cursor-pointer\"\n          >\n            <a href=\"#\" className=\"flex flex-col items-center\">\n              <item.icon className=\"h-5 w-5 mb-1\" />\n              <span className=\"text-[11px] text-center font-semibold tracking-tight\">{item.label}</span>\n            </a>\n          </span>\n        ))}\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        {menuItems.footer.map((item, index) => (\n           <span\n            key={index}\n            className=\"flex flex-col items-center justify-start w-full px-2 py-2 rounded-md text-sidebar-foreground hover:text-indigo-700 hover:bg-indigo-100 cursor-pointer\"\n          >\n            <a href=\"#\" className=\"flex flex-col items-center\">\n              <item.icon className=\"h-5 w-5 mb-1\" />\n              <span className=\"text-[11px]\">{item.label}</span>\n            </a>\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "~/components/sidemenu-legacy.tsx"
    },
    {
      "path": "registry/bellhop/blocks/bellhop-container/components/header-legacy.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarImage, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Logo } from \"@/components/logo\";\nimport { ChevronDown } from \"lucide-react\";\nimport { MagnifyingGlassIcon, BellAlertIcon } from '@heroicons/react/16/solid';\nimport { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem } from \"@/components/ui/dropdown-menu\";\n\ninterface HeaderLegacyProps {\n  logoVariant?: \"actablSymbol\" | \"alSymbol\" | \"heSymbol\" | \"psSymbol\" | \"trSymbol\";\n}\n\nconst HeaderLegacy = ({ logoVariant = \"actablSymbol\" }: HeaderLegacyProps) => {\n  return (\n    <header className=\"bg-indigo-800 flex flex-wrap md:justify-start md:flex-nowrap z-50 w-full\">\n\n    <nav className=\"w-full h-14 flex items-center justify-between px-4 relative\">\n      <div\n        id=\"gradientBar\"\n        className=\"absolute top-0 left-0 h-full w-1.5\"\n        style={{\n          background: \"linear-gradient(180deg, rgba(250, 147, 149, 1.00) 0%, rgba(93, 115, 222, 1.00) 50.999999046325684%, rgba(23, 27, 112, 1.00) 100%)\",\n        }}\n      ></div>\n      <div className=\"w-full h-13 pl-2 flex items-center justify-start gap-2\">\n        <Logo variant={logoVariant} className=\"text-white w-10\" />\n        <div className=\"flex items-center gap-2\">\n          <div className=\"h-8 w-px\"></div>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"default\"\n                size=\"md\"\n                className=\"bg-transparent hover:bg-indigo-700/98 cursor-pointer\"\n                endIcon={<ChevronDown />}\n              >\n                Hotel Name\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-48\" align=\"start\">\n              <DropdownMenuItem>Hotel 1</DropdownMenuItem>\n              <DropdownMenuItem>Hotel 2</DropdownMenuItem>\n              <DropdownMenuItem>Hotel 3</DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n\n      <div className=\"flex items-center gap-4\">\n        <div className=\"relative\">\n          <Label htmlFor=\"search\" className=\"sr-only\">\n            Search\n          </Label>\n          <Input\n            data-sidebar=\"input\"\n            id=\"search\"\n            placeholder=\"Search...\"\n            className=\"pl-10 h-8 w-64 bg-white text-gray-700 rounded-lg focus-visible:border-ring focus-visible:ring-primary/30 focus-visible:ring-2\"\n          />\n          <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 text-neutral-500 size-4\" />\n        </div>\n\n        <div className=\"relative\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-white hover:bg-primary/80\"\n            startIcon={<BellAlertIcon />}\n          ></Button>\n\n          <span className=\"absolute top-0 right-0 bg-destructive text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\">\n            3\n          </span>\n        </div>\n\n        <div className=\"relative\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Avatar className=\"cursor-pointer\">\n                <AvatarImage\n                  src=\"https://avatar.iran.liara.run/public/41\"\n                  alt=\"AB\"\n                />\n                <AvatarFallback>AB</AvatarFallback>\n              </Avatar>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-48\" align=\"end\">\n              <DropdownMenuItem>Profile</DropdownMenuItem>\n              <DropdownMenuItem>Settings</DropdownMenuItem>\n              <DropdownMenuItem>Logout</DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n    </nav>\n    </header>\n  );\n};\n\nexport default HeaderLegacy;",
      "type": "registry:component",
       "target": "~/components/header-legacy.tsx"
    },
    {
      "path": "registry/bellhop/blocks/bellhop-container/components/data-table.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { ArrowPathIcon, EllipsisHorizontalIcon, PlusIcon, PrinterIcon } from '@heroicons/react/16/solid';\nimport { ChevronDown } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { toast } from \"sonner\";\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[]\n  data: TData[]\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center pt-1 pb-4 gap-2\">\n        <Button\n          variant=\"default\"\n          size=\"sm\"\n          startIcon={<PlusIcon />}\n          onClick={() => toast.success(\"Task has been created\")}\n        >\n          Create Task\n        </Button>\n        <Input\n          placeholder=\"Search task...\"\n          value={(table.getColumn(\"taskName\")?.getFilterValue() as string) ?? \"\"}\n          onChange={(event) =>\n            table.getColumn(\"taskName\")?.setFilterValue(event.target.value)\n          }\n          className=\"ml-auto max-w-xs\"\n        />\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\" className=\"\">\n              Columns <ChevronDown />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownMenuCheckboxItem\n                    key={column.id}\n                    className=\"capitalize\"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) =>\n                      column.toggleVisibility(!!value)\n                    }\n                  >\n                    {column.id}\n                  </DropdownMenuCheckboxItem>\n                );\n              })}\n          </DropdownMenuContent>\n        </DropdownMenu>\n        <div className=\"gap-1\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon-sm\"\n            startIcon={<ArrowPathIcon />}\n          />\n          <Button\n            variant=\"ghost\"\n            size=\"icon-sm\"\n            startIcon={<PrinterIcon />}\n          />\n\n          <Button\n            variant=\"ghost\"\n            size=\"icon-sm\"\n            startIcon={<EllipsisHorizontalIcon />}\n          />\n        </div>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id} className=\"[&:has([role=checkbox])]:pl-4\">\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell\n                      key={cell.id}\n                      className=\"[&:has([role=checkbox])]:pl-4\"\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "~/components/data-table.tsx"
    },
    {
      "path": "registry/bellhop/blocks/bellhop-container/components/columns.tsx",
      "content": "\"use client\";\n\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { MoreHorizontal } from \"lucide-react\";\nimport { ChevronUpDownIcon } from '@heroicons/react/16/solid';\n\nexport type Task = {\n  id: string;\n  taskName: string;\n  status: \"Pending\" | \"In Progress\" | \"Done\";\n  dueDate: string;\n  assignedTo: string;\n  priority: \"Low\" | \"Medium\" | \"High\";\n};\n\nexport const columns: ColumnDef<Task>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"taskName\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          className=\"font-semibold text-neutral-700 hover:text-neutral-800 p-1 h-8 focus:ring-0\"\n          onClick={() =>\n            column.toggleSorting(column.getIsSorted() === \"asc\")\n          }\n        >\n          Task\n          <ChevronUpDownIcon className=\"size-4\"/>\n        </Button>\n      );\n    },\n    cell: ({ row }) => (\n      <div className=\"capitalize\">{row.getValue(\"taskName\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => {\n      const status = row.getValue(\"status\") as Task[\"status\"];\n      let badgeColor: \"yellow\" | \"blue\" | \"green\" | \"neutral\" = \"neutral\";\n      if (status === \"Pending\") badgeColor = \"yellow\";\n      else if (status === \"In Progress\") badgeColor = \"blue\";\n      else if (status === \"Done\") badgeColor = \"green\";\n      return (\n        <Badge variant=\"outline\" color={badgeColor}>\n          {status}\n        </Badge>\n      );\n    },\n  },\n  {\n    accessorKey: \"dueDate\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          className=\"font-semibold text-neutral-700 hover:text-neutral-800 p-1 h-8 focus:ring-0\"\n          onClick={() =>\n            column.toggleSorting(column.getIsSorted() === \"asc\")\n          }\n        >\n          Due Date\n          <ChevronUpDownIcon className=\"size-4\"/>\n        </Button>\n      );\n    },\n    cell: ({ row }) => (\n      <div className=\"capitalize\">{row.getValue(\"dueDate\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"assignedTo\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          className=\"font-semibold text-neutral-700 hover:text-neutral-800 p-1 h-8 focus:ring-0\"\n          onClick={() =>\n            column.toggleSorting(column.getIsSorted() === \"asc\")\n          }\n        >\n        Assigned To\n        <ChevronUpDownIcon className=\"size-4\"/>\n      </Button>\n      );\n    },\n    cell: ({ row }) => <div>{row.getValue(\"assignedTo\")}</div>,\n  },\n  {\n    accessorKey: \"priority\",\n    header: \"Priority\",\n    cell: ({ row }) => {\n      const priority = row.getValue(\"priority\") as Task[\"priority\"];\n      let badgeColor: \"red\" | \"orange\" | \"green\" = \"green\";\n      if (priority === \"High\") badgeColor = \"red\";\n      else if (priority === \"Medium\") badgeColor = \"orange\";\n      return (\n        <Badge variant=\"solid\" color={badgeColor}>\n          {priority}\n        </Badge>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const task = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem\n              onClick={() => navigator.clipboard.writeText(task.id)}\n            >\n              Copy task ID\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>View project</DropdownMenuItem>\n            <DropdownMenuItem>View details</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];",
      "type": "registry:component",
       "target": "~/components/columns.tsx"
    },
    {
      "path": "registry/bellhop/blocks/bellhop-container/components/logo.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst logoVariants = {\n  actablSymbol: () => (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-8 w-auto\"\n    >\n      <path\n        d=\"M37 32.454C35.7073 31.4811 34.7974 30.6054 34.3185 29.7784C33.8396 28.9513 33.6003 27.8811 33.6003 26.5676V14.7459C33.6003 6.23242 28.4283 2 18.0846 2C14.3971 2 11.5242 2.53512 9.41689 3.5081C7.30995 4.52972 5.58582 5.94054 4.19703 7.78919L10.5664 12.3135C11.7635 11 12.9126 10.0757 14.0622 9.49189C15.2113 8.9081 16.5523 8.6162 18.0846 8.6162C20.4312 8.6162 22.0593 9.10269 22.8735 10.1243C23.6873 11.1459 24.1662 12.3622 24.2623 13.8216C24.2144 14.6 23.8791 15.1351 23.3524 15.4757C22.7774 15.8162 21.82 16.0594 20.4312 16.2054L16.983 16.5459C14.5889 16.7892 12.4337 17.1784 10.4704 17.7622C8.50698 18.3459 6.73536 19.4649 5.25086 21.0216C3.76636 22.627 3 24.8649 3 27.7838C3 31.0432 4.00562 33.573 6.01686 35.3243C8.02809 37.1243 10.71 38 14.11 38C16.7916 38 19.0424 37.5135 20.8622 36.4919C22.6817 35.4703 24.1184 34.2054 25.1718 32.6973C26.1775 34.8378 28.0451 36.5892 30.7749 38L37 32.454ZM24.2623 24.7676C24.2623 26.5676 23.5916 28.1243 22.2507 29.3405C20.9101 30.6054 18.9946 31.2378 16.5523 31.1405C15.1635 31.1405 14.0622 30.8 13.248 30.1189C12.4337 29.4378 12.0509 28.4649 12.0509 27.2C12.0509 25.5459 12.5777 24.3784 13.679 23.7946C14.7803 23.2108 16.1213 22.8216 17.7493 22.6757L19.9045 22.4811C22.0593 22.2378 23.4959 21.9946 24.2623 21.7027V24.7676Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  alSymbol: () => (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-11 w-auto\"\n    >\n      <path\n        d=\"M39.1617 31.9324C39.0651 31.7874 23.9446 7.89081 23.2763 6.81997C23.0186 6.4013 22.6644 6.20001 22.1652 6.20001C20.8125 6.20806 19.4599 6.20806 18.1073 6.20001C17.6403 6.20001 17.2941 6.3852 17.0525 6.77972C16.7949 7.19839 1.58574 30.781 0.7806 32.037C0.458543 32.5362 0.659829 33.0435 1.23953 33.1642C1.3442 33.1884 5.66781 33.2045 7.73703 33.2045C7.90611 33.2045 7.98663 33.1562 8.04299 32.9952C8.34894 32.1336 8.76761 31.3285 9.36342 30.62C10.2249 29.5975 11.3119 29.0822 12.6403 29.0822C17.5517 29.0741 27.4952 29.058 27.7368 29.0822C29.2021 29.219 30.12 29.9195 30.8205 30.8213C31.3197 31.4815 31.7061 32.2142 31.9799 32.9952C32.0362 33.1562 32.1248 33.2045 32.2939 33.2045C33.3245 33.1964 37.4468 33.2125 38.4854 33.1964C38.7994 33.1884 39.1295 33.1642 39.3067 32.8341C39.4596 32.504 39.355 32.2222 39.1617 31.9324ZM27.7207 27.1337C25.1442 27.1337 14.8223 27.1337 12.2378 27.1418C12.0284 27.1418 11.9882 27.0935 12.0284 26.9002C12.3344 25.4671 12.898 24.1708 13.8561 23.0516C14.8464 21.8842 16.3118 20.8214 18.6065 20.5879V19.3802H19.3552V18.5428H18.6145V17.4076H21.4084V18.5428H20.6596V19.3802H21.4084V20.5879C25.0234 21.0227 26.4969 23.3979 26.9719 24.1949C27.455 25.0162 27.7609 25.9018 27.9703 26.8278C28.0266 27.1337 28.0347 27.1337 27.7207 27.1337Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  heSymbol: () => (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-11 w-auto\"\n    >\n      <path\n        d=\"M39.7082 6.99503V8.65781L22.1786 5.65887L15.9565 8.65781V6.93565L22.2484 3.62L39.7082 6.99503Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M39.7082 12.2704V14.3686L22.1786 11.7854L15.9565 14.2598V12.2704L22.2484 9.74652L39.7082 12.2704Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M22.2185 15.9127L39.7082 17.9615V19.7628L22.2384 17.8328L18.0704 19.1393L18.0704 19.3075L5.04783 17.3379L0.291504 19.4164V17.9614L5.04783 15.7444L16.814 17.6744L22.2185 15.9127Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M39.7082 23.2962L22.2185 22.0689L18.1502 22.6825V24.8402L22.1487 24.1572L39.7082 25.2064V23.2962Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M39.7082 30.5312V28.6606L22.2184 28.1162L18.0105 28.4429V30.0891L5.02789 29.4722L0.291504 30.066V31.709L5.02789 31.1053L18.1502 31.5408V30.5253L22.1786 30.3531L39.7082 30.5312Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M39.7082 34.1141V35.9155L22.1586 36.4004L18.0105 36.0837V35.6878H5.02789L0.291504 35.5789V34.1141H5.08772L18.0105 34.2329L22.2384 34.2824L39.7082 34.1141Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M18.1502 22.1976V23.7515L5.02789 22.0689L0.291504 23.7515V22.1778L5.08772 20.3566L18.1502 22.1976Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M18.1502 27.5917V26.0279L5.0578 24.8996L0.291504 26.0279V27.5917L5.00795 26.5327L18.1502 27.5917Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  psSymbol: () => (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-10 w-auto\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M23.0513 18.3086L25.2449 19.4437C27.5943 20.6303 27.8542 22.4671 27.8542 23.21C27.8542 25.8 25.8166 27.7709 23.1033 27.7709C21.887 27.7709 20.6291 27.3685 19.444 26.5946C19.1321 26.9557 18.9554 27.3169 18.893 27.6883C18.893 27.7399 18.8411 27.7812 18.7995 27.7812H18.2069C18.1549 27.7812 18.1134 27.7296 18.1134 27.678V22.7766H12.5412C12.4893 22.7766 12.4477 22.7353 12.4477 22.6837V22.0337C12.4477 21.9821 12.4893 21.9408 12.5412 21.9408C14.6828 21.9408 15.0362 21.4145 15.0362 18.226V13.0151C15.0362 9.84721 14.6828 9.33127 12.5412 9.33127C12.4893 9.33127 12.4477 9.27968 12.4477 9.22809V8.57801C12.4477 8.52641 12.4893 8.47482 12.5412 8.47482H19.3297C22.5731 8.47482 24.6731 10.1052 24.6731 12.6126C24.6731 12.7158 24.6731 12.819 24.6627 12.9119C24.9642 13.046 25.2241 13.2008 25.4424 13.3453C25.5983 13.1595 25.8062 12.8912 25.8582 12.4579C25.8582 12.4063 25.8998 12.3753 25.9518 12.3753H26.6067C26.6587 12.3753 26.7003 12.4166 26.7003 12.4682V17.9681C26.7003 18.03 26.6587 18.0713 26.6067 18.0713H25.9518C25.8998 18.0713 25.8582 18.03 25.8582 17.9887C25.7646 17.0807 25.432 15.2852 24.2469 14.3771C23.6231 15.5535 22.334 16.3583 20.6187 16.6266H20.5876C21.0034 17.1735 21.7935 17.6585 23.0513 18.3086ZM20.2965 15.1717C20.4628 14.5113 21.0242 14.0985 21.6687 13.9128C21.4192 14.47 20.9826 14.9447 20.2965 15.1717ZM19.3401 9.84721H17.5728V15.3162H18.2693C18.6747 13.7374 20.1093 12.5714 21.9286 12.4166C21.8662 11.1371 21.1593 9.84721 19.3401 9.84721ZM19.0698 22.7663C19.5272 24.9848 21.0969 26.2953 23.3632 26.2953C24.8082 26.2953 25.7854 25.4595 25.7958 24.2109C25.7958 23.179 24.985 22.302 23.1657 21.4042L20.9306 20.2692C19.3193 19.4333 18.3629 18.1848 18.1861 16.7092H17.5624V18.2054C17.5624 21.3939 17.9158 21.9202 20.0574 21.9202C20.1093 21.9202 20.1509 21.9614 20.1509 22.013V22.6734C20.1509 22.725 20.1093 22.7663 20.0574 22.7663H19.0698Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.33901 24.149L4.32861 0.333313H35.6718L35.6614 24.1387C35.2352 27.905 33.5407 30.2887 30.5467 33.374C27.6567 36.3561 24.1637 38.5849 20.4524 39.8129L19.995 39.9677L19.5376 39.8129C15.8471 38.5953 12.3541 36.3664 9.45372 33.374C6.45974 30.2887 4.76523 27.9154 4.33901 24.149ZM29.923 32.7858C32.7818 29.8346 34.4036 27.5748 34.7986 24.0149H34.809V1.20009H5.20186V24.0665C5.5969 27.5852 7.21864 29.845 10.0775 32.7858C12.0319 34.798 15.3065 37.5118 19.8183 39.008L19.995 39.0699L20.1718 39.008C23.6959 37.842 27.1577 35.6338 29.923 32.7858Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n\n  trSymbol: () => (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-10 w-auto\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M21.9375 22.9492V5.89223H34.1495L31.0914 11.4518H34.5864L39.4326 3H1.55713L6.40332 11.4416H9.89826L6.84019 5.89223H19.0623V22.9492L20.4949 25.5757L21.9375 22.9492Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.4949 36L7.73424 13.7615H11.1581L20.4949 30.7879L29.8316 13.7615H33.2555L20.4949 36Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n};\n\ntype LogoProps = {\n  variant?: keyof typeof logoVariants;\n  className?: string;\n};\n\nconst Logo: React.FC<LogoProps> = ({ variant = \"actablSymbol\", className }) => {\n  const LogoComponent = logoVariants[variant];\n\n  return (\n    <div className={cn(\"inline-block\", className)}>{<LogoComponent />}</div>\n  );\n};\n\nexport { Logo };",
      "type": "registry:component",
       "target": "~/components/logo.tsx"
    },
        {
      "path": "registry/bellhop/theme/globals.css",
      "content": "@import \"tailwindcss\";\r\n@import \"tw-animate-css\";\r\n\r\n@custom-variant dark (&:is(.dark *));\r\n\r\n@theme inline {\r\n  --color-background: var(--background);\r\n  --color-foreground: var(--foreground);\r\n  --font-sans: var(--font-inter);\r\n  --font-mono: var(--font-geist-mono);\r\n  --color-sidebar-ring: var(--sidebar-ring);\r\n  --color-sidebar-border: var(--sidebar-border);\r\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\r\n  --color-sidebar-accent: var(--sidebar-accent);\r\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\r\n  --color-sidebar-primary: var(--sidebar-primary);\r\n  --color-sidebar-foreground: var(--sidebar-foreground);\r\n  --color-sidebar: var(--sidebar);\r\n  --color-chart-5: var(--chart-5);\r\n  --color-chart-4: var(--chart-4);\r\n  --color-chart-3: var(--chart-3);\r\n  --color-chart-2: var(--chart-2);\r\n  --color-chart-1: var(--chart-1);\r\n  --color-ring: var(--ring);\r\n  --color-input: var(--input);\r\n  --color-border: var(--border);\r\n  --color-destructive: var(--destructive);\r\n  --color-accent-foreground: var(--accent-foreground);\r\n  --color-accent: var(--accent);\r\n  --color-muted-foreground: var(--muted-foreground);\r\n  --color-muted: var(--muted);\r\n  --color-secondary-foreground: var(--secondary-foreground);\r\n  --color-secondary: var(--secondary);\r\n  --color-primary-foreground: var(--primary-foreground);\r\n  --color-primary: var(--primary);\r\n  --color-popover-foreground: var(--popover-foreground);\r\n  --color-popover: var(--popover);\r\n  --color-card-foreground: var(--card-foreground);\r\n  --color-card: var(--card);\r\n  --radius-sm: calc(var(--radius) - 4px);\r\n  --radius-md: calc(var(--radius) - 2px);\r\n  --radius-lg: var(--radius);\r\n  --radius-xl: calc(var(--radius) + 4px);\r\n  --color-blue-200: rgb(178, 221, 255);\r\n  --color-blue-25: rgb(245, 250, 255);\r\n  --color-blue-300: rgb(132, 202, 255);\r\n  --color-blue-400: rgb(83, 177, 253);\r\n  --color-blue-50: rgb(239, 248, 255);\r\n  --color-blue-500: rgb(46, 144, 250);\r\n  --color-blue-600: rgb(21, 112, 239);\r\n  --color-blue-700: rgb(23, 92, 211);\r\n  --color-blue-800: rgb(24, 73, 169);\r\n  --color-blue-900: rgb(25, 65, 133);\r\n  --color-blue-950: rgb(16, 42, 86);\r\n  --color-indigo-100: rgb(225, 234, 254);\r\n  --color-indigo-200: rgb(186, 206, 252);\r\n  --color-indigo-25: rgb(245, 248, 254);\r\n  --color-indigo-300: rgb(141, 170, 252);\r\n  --color-indigo-400: rgb(116, 152, 251);\r\n  --color-indigo-50: rgb(241, 245, 254);\r\n  --color-indigo-500: rgb(80, 104, 221);\r\n  --color-indigo-600: rgb(38, 66, 207);\r\n  --color-indigo-700: rgb(25, 48, 169);\r\n  --color-indigo-800: rgb(27, 33, 146);\r\n  --color-indigo-900: rgb(22, 27, 121);\r\n  --color-indigo-950: rgb(20, 23, 82);\r\n  --color-red-100: rgb(252, 227, 227);\r\n  --color-red-200: rgb(251, 208, 208);\r\n  --color-red-25: rgb(255, 251, 250);\r\n  --color-red-300: rgb(247, 171, 171);\r\n  --color-red-400: rgb(248, 114, 114);\r\n  --color-red-50: rgb(254, 239, 235);\r\n  --color-red-500: rgb(240, 82, 80);\r\n  --color-red-600: rgb(214, 52, 31);\r\n  --color-red-700: rgb(191, 43, 24);\r\n  --color-red-800: rgb(153, 36, 36);\r\n  --color-red-900: rgb(112, 30, 25);\r\n  --color-red-950: rgb(85, 22, 12);\r\n  --color-green-100: rgb(220, 250, 230);\r\n  --color-green-200: rgb(171, 239, 198);\r\n  --color-green-25: rgb(246, 254, 249);\r\n  --color-green-300: rgb(117, 224, 167);\r\n  --color-green-400: rgb(71, 205, 137);\r\n  --color-green-50: rgb(236, 253, 243);\r\n  --color-green-500: rgb(23, 178, 106);\r\n  --color-green-600: rgb(7, 148, 85);\r\n  --color-green-700: rgb(6, 118, 71);\r\n  --color-green-800: rgb(8, 93, 58);\r\n  --color-green-900: rgb(7, 77, 49);\r\n  --color-green-950: rgb(5, 51, 33);\r\n  --color-neutral-100: rgb(239, 241, 245);\r\n  --color-neutral-200: rgb(220, 223, 234);\r\n  --color-neutral-25: rgb(252, 252, 253);\r\n  --color-neutral-300: rgb(185, 192, 212);\r\n  --color-neutral-400: rgb(125, 137, 176);\r\n  --color-neutral-50: rgb(249, 249, 251);\r\n  --color-neutral-500: rgb(93, 107, 152);\r\n  --color-neutral-600: rgb(74, 85, 120);\r\n  --color-neutral-700: rgb(64, 73, 104);\r\n  --color-neutral-800: rgb(48, 55, 79);\r\n  --color-neutral-900: rgb(17, 19, 34);\r\n  --color-neutral-950: rgb(14, 16, 27);\r\n  --color-rose-100: rgb(245, 220, 219);\r\n  --color-rose-200: rgb(239, 195, 194);\r\n  --color-rose-25: rgb(252, 244, 243);\r\n  --color-rose-300: rgb(233, 170, 174);\r\n  --color-rose-400: rgb(227, 140, 145);\r\n  --color-rose-50: rgb(251, 240, 238);\r\n  --color-rose-500: rgb(228, 119, 137);\r\n  --color-rose-600: rgb(210, 86, 100);\r\n  --color-rose-700: rgb(200, 70, 86);\r\n  --color-rose-800: rgb(165, 44, 64);\r\n  --color-rose-900: rgb(99, 28, 40);\r\n  --color-rose-950: rgb(104, 29, 41);\r\n  --color-lime-100: rgb(230, 244, 215);\r\n  --color-lime-200: rgb(206, 234, 176);\r\n  --color-lime-25: rgb(250, 253, 247);\r\n  --color-lime-300: rgb(172, 220, 121);\r\n  --color-lime-400: rgb(134, 201, 62);\r\n  --color-lime-50: rgb(245, 251, 238);\r\n  --color-lime-500: rgb(102, 159, 42);\r\n  --color-lime-600: rgb(79, 122, 33);\r\n  --color-lime-700: rgb(63, 98, 26);\r\n  --color-lime-800: rgb(51, 80, 21);\r\n  --color-lime-900: rgb(43, 66, 18);\r\n  --color-lime-950: rgb(26, 40, 11);\r\n  --color-orange-100: rgb(253, 234, 215);\r\n  --color-orange-200: rgb(249, 219, 175);\r\n  --color-orange-25: rgb(254, 250, 245);\r\n  --color-orange-300: rgb(247, 178, 122);\r\n  --color-orange-400: rgb(243, 135, 68);\r\n  --color-orange-50: rgb(254, 246, 238);\r\n  --color-orange-500: rgb(239, 104, 32);\r\n  --color-orange-600: rgb(224, 79, 22);\r\n  --color-orange-700: rgb(185, 56, 21);\r\n  --color-orange-800: rgb(147, 47, 25);\r\n  --color-orange-900: rgb(119, 41, 23);\r\n  --color-orange-950: rgb(81, 28, 16);\r\n  --color-pink-100: rgb(251, 223, 239);\r\n  --color-pink-200: rgb(249, 200, 228);\r\n  --color-pink-25: rgb(254, 246, 251);\r\n  --color-pink-300: rgb(246, 162, 208);\r\n  --color-pink-400: rgb(241, 126, 184);\r\n  --color-pink-50: rgb(253, 242, 248);\r\n  --color-pink-500: rgb(225, 76, 148);\r\n  --color-pink-600: rgb(201, 34, 115);\r\n  --color-pink-700: rgb(183, 31, 105);\r\n  --color-pink-800: rgb(161, 27, 92);\r\n  --color-pink-900: rgb(109, 18, 62);\r\n  --color-pink-950: rgb(75, 12, 42);\r\n  --color-amber-100: rgb(254, 240, 199);\r\n  --color-amber-200: rgb(254, 223, 137);\r\n  --color-amber-25: rgb(255, 252, 245);\r\n  --color-amber-300: rgb(254, 200, 75);\r\n  --color-amber-400: rgb(253, 176, 34);\r\n  --color-amber-50: rgb(255, 250, 235);\r\n  --color-amber-500: rgb(247, 144, 9);\r\n  --color-amber-600: rgb(220, 104, 3);\r\n  --color-amber-700: rgb(181, 71, 8);\r\n  --color-amber-800: rgb(147, 55, 13);\r\n  --color-amber-900: rgb(122, 46, 14);\r\n  --color-amber-950: rgb(78, 29, 9);\r\n  --color-yellow-100: rgb(254, 247, 195);\r\n  --color-yellow-200: rgb(254, 238, 149);\r\n  --color-yellow-25: rgb(254, 253, 240);\r\n  --color-yellow-300: rgb(253, 226, 114);\r\n  --color-yellow-400: rgb(250, 197, 21);\r\n  --color-yellow-50: rgb(254, 251, 232);\r\n  --color-yellow-500: rgb(234, 170, 8);\r\n  --color-yellow-600: rgb(202, 133, 4);\r\n  --color-yellow-700: rgb(161, 92, 7);\r\n  --color-yellow-800: rgb(133, 74, 14);\r\n  --color-yellow-900: rgb(113, 59, 18);\r\n  --color-yellow-950: rgb(84, 44, 13);\r\n  --color-purple-100: rgb(235, 219, 235);\r\n  --color-purple-200: rgb(219, 189, 219);\r\n  --color-purple-25: rgb(248, 242, 248);\r\n  --color-purple-300: rgb(207, 165, 206);\r\n  --color-purple-400: rgb(187, 129, 186);\r\n  --color-purple-50: rgb(244, 235, 244);\r\n  --color-purple-500: rgb(160, 93, 168);\r\n  --color-purple-600: rgb(142, 75, 155);\r\n  --color-purple-700: rgb(125, 54, 140);\r\n  --color-purple-800: rgb(108, 49, 119);\r\n  --color-purple-900: rgb(86, 37, 95);\r\n  --color-purple-950: rgb(61, 23, 69);\r\n  --text-xs: 0.85rem;\r\n  --text-sm: 0.95rem;\r\n  --text-base: 1rem;\r\n  --text-lg: 1.125rem;\r\n  --radius: 0.625rem;\r\n  --gap-smaller: 4px;\r\n  --sidebar-ring: var(----sidebar-ring);\r\n  --sidebar-border: var(----sidebar-border);\r\n  --sidebar-accent-foreground: var(----sidebar-accent-foreground);\r\n  --sidebar-accent: var(----sidebar-accent);\r\n  --sidebar-primary-foreground: var(----sidebar-primary-foreground);\r\n  --sidebar-primary: var(----sidebar-primary);\r\n  --sidebar-foreground: var(----sidebar-foreground);\r\n  --sidebar: var(----sidebar);\r\n  --chart-5: var(----chart-5);\r\n  --chart-4: var(----chart-4);\r\n  --chart-3: var(----chart-3);\r\n  --chart-2: var(----chart-2);\r\n  --chart-1: var(----chart-1);\r\n  --ring-success: var(----ring-success);\r\n  --ring-destructive: var(----ring-destructive);\r\n  --ring: var(----ring);\r\n  --input: var(----input);\r\n  --border-color: var(----border-color);\r\n  --success: var(----success);\r\n  --destructive: var(----destructive);\r\n  --accent-foreground: var(----accent-foreground);\r\n  --accent: var(----accent);\r\n  --muted-foreground: var(----muted-foreground);\r\n  --muted: var(----muted);\r\n  --secondary-foreground: var(----secondary-foreground);\r\n  --secondary: var(----secondary);\r\n  --primary-foreground: var(----primary-foreground);\r\n  --primary-hover: var(----primary-hover);\r\n  --primary: var(----primary);\r\n  --popover-foreground: var(----popover-foreground);\r\n  --popover: var(----popover);\r\n  --card-foreground: var(----card-foreground);\r\n  --card: var(----card);\r\n  --fg-inverted: var(----fg-inverted);\r\n  --bg-inverted: var(----bg-inverted);\r\n  --fg: var(----fg);\r\n  --bg: var(----bg);\r\n  --foreground: var(----foreground);\r\n  --background: var(----background);\r\n  --color-color-violet-950: var(----color-violet-950);\r\n  --color-color-violet-900: var(----color-violet-900);\r\n  --color-color-violet-800: var(----color-violet-800);\r\n  --color-color-violet-700: var(----color-violet-700);\r\n  --color-color-violet-600: var(----color-violet-600);\r\n  --color-color-violet-500: var(----color-violet-500);\r\n  --color-color-violet-400: var(----color-violet-400);\r\n  --color-color-violet-300: var(----color-violet-300);\r\n  --color-color-violet-200: var(----color-violet-200);\r\n  --color-color-violet-100: var(----color-violet-100);\r\n  --color-color-violet-50: var(----color-violet-50);\r\n  --color-color-blue-950: var(----color-blue-950);\r\n  --color-color-blue-900: var(----color-blue-900);\r\n  --color-color-blue-800: var(----color-blue-800);\r\n  --color-color-blue-700: var(----color-blue-700);\r\n  --color-color-blue-600: var(----color-blue-600);\r\n  --color-color-blue-500: var(----color-blue-500);\r\n  --color-color-blue-400: var(----color-blue-400);\r\n  --color-color-blue-300: var(----color-blue-300);\r\n  --color-color-blue-200: var(----color-blue-200);\r\n  --color-color-blue-100: var(----color-blue-100);\r\n  --color-color-blue-50: var(----color-blue-50);\r\n  --color-color-rose-950: var(----color-rose-950);\r\n  --color-color-rose-900: var(----color-rose-900);\r\n  --color-color-rose-800: var(----color-rose-800);\r\n  --color-color-rose-700: var(----color-rose-700);\r\n  --color-color-rose-600: var(----color-rose-600);\r\n  --color-color-rose-500: var(----color-rose-500);\r\n  --color-color-rose-400: var(----color-rose-400);\r\n  --color-color-rose-300: var(----color-rose-300);\r\n  --color-color-rose-200: var(----color-rose-200);\r\n  --color-color-rose-100: var(----color-rose-100);\r\n  --color-color-rose-50: var(----color-rose-50);\r\n  --color-color-green-950: var(----color-green-950);\r\n  --color-color-green-900: var(----color-green-900);\r\n  --color-color-green-800: var(----color-green-800);\r\n  --color-color-green-700: var(----color-green-700);\r\n  --color-color-green-600: var(----color-green-600);\r\n  --color-color-green-500: var(----color-green-500);\r\n  --color-color-green-400: var(----color-green-400);\r\n  --color-color-green-300: var(----color-green-300);\r\n  --color-color-green-200: var(----color-green-200);\r\n  --color-color-green-100: var(----color-green-100);\r\n  --color-color-green-50: var(----color-green-50);\r\n  --color-color-amber-950: var(----color-amber-950);\r\n  --color-color-amber-900: var(----color-amber-900);\r\n  --color-color-amber-800: var(----color-amber-800);\r\n  --color-color-amber-700: var(----color-amber-700);\r\n  --color-color-amber-600: var(----color-amber-600);\r\n  --color-color-amber-500: var(----color-amber-500);\r\n  --color-color-amber-400: var(----color-amber-400);\r\n  --color-color-amber-300: var(----color-amber-300);\r\n  --color-color-amber-200: var(----color-amber-200);\r\n  --color-color-amber-100: var(----color-amber-100);\r\n  --color-color-amber-50: var(----color-amber-50);\r\n  --color-color-red-950: var(----color-red-950);\r\n  --color-color-red-900: var(----color-red-900);\r\n  --color-color-red-800: var(----color-red-800);\r\n  --color-color-red-700: var(----color-red-700);\r\n  --color-color-red-600: var(----color-red-600);\r\n  --color-color-red-500: var(----color-red-500);\r\n  --color-color-red-400: var(----color-red-400);\r\n  --color-color-red-300: var(----color-red-300);\r\n  --color-color-red-200: var(----color-red-200);\r\n  --color-color-red-100: var(----color-red-100);\r\n  --color-color-red-50: var(----color-red-50);\r\n  --color-color-indigo-950: var(----color-indigo-950);\r\n  --color-color-indigo-900: var(----color-indigo-900);\r\n  --color-color-indigo-800: var(----color-indigo-800);\r\n  --color-color-indigo-700: var(----color-indigo-700);\r\n  --color-color-indigo-600: var(----color-indigo-600);\r\n  --color-color-indigo-500: var(----color-indigo-500);\r\n  --color-color-indigo-400: var(----color-indigo-400);\r\n  --color-color-indigo-300: var(----color-indigo-300);\r\n  --color-color-indigo-200: var(----color-indigo-200);\r\n  --color-color-indigo-100: var(----color-indigo-100);\r\n  --color-color-indigo-50: var(----color-indigo-50);\r\n  --color-color-neutral-950: var(----color-neutral-950);\r\n  --color-color-neutral-900: var(----color-neutral-900);\r\n  --color-color-neutral-800: var(----color-neutral-800);\r\n  --color-color-neutral-700: var(----color-neutral-700);\r\n  --color-color-neutral-600: var(----color-neutral-600);\r\n  --color-color-neutral-500: var(----color-neutral-500);\r\n  --color-color-neutral-400: var(----color-neutral-400);\r\n  --color-color-neutral-300: var(----color-neutral-300);\r\n  --color-color-neutral-200: var(----color-neutral-200);\r\n  --color-color-neutral-100: var(----color-neutral-100);\r\n  --color-color-neutral-50: var(----color-neutral-50);\r\n}\r\n\r\n:root {\r\n  --radius: 0.625rem;\r\n  --background: var(--color-white);\r\n  --foreground: var(--color-neutral-900);\r\n  --card: var(--color-white);\r\n  --card-foreground: var(--color-neutral-800);\r\n  --popover: var(--color-white);\r\n  --popover-foreground: var(--color-neutral-900);\r\n  --primary: var(--color-indigo-600);\r\n  --primary-foreground: var(--color-white);\r\n  --secondary: var(--color-neutral-200);\r\n  --secondary-foreground: var(--color-neutral-800);\r\n  --muted: var(--color-neutral-50);\r\n  --muted-foreground: var(--color-neutral-800);\r\n  --accent: var(--color-indigo-100);\r\n  --accent-foreground: var(--color-indigo-700);\r\n  --destructive: var(--color-red-700);\r\n  --border: rgb(232 232 242);\r\n  --input: var(--color-neutral-300);\r\n  --ring: var(--color-indigo-700);\r\n  --chart-1: var(--color-rose-500);\r\n  --chart-2: var(--color-indigo-500);\r\n  --chart-3: var(--color-violet-400);\r\n  --chart-4: var(--color-rose-600);\r\n  --chart-5: var(--color-violet-600);\r\n  --sidebar: var(--color-white);\r\n  --sidebar-foreground: var(--color-neutral-700);\r\n  --sidebar-primary: var(--color-indigo-300);\r\n  --sidebar-primary-foreground: var(--color-indigo-800);\r\n  --sidebar-accent: var(--color-indigo-100);\r\n  --sidebar-accent-foreground: var(--color-indigo-700);\r\n  --sidebar-border: var(--color-neutral-200);\r\n  --sidebar-ring: var(--color-indigo-400);\r\n  --bg: var(--color-white);\r\n  --fg: var(--color-neutral-900);\r\n  --bg-inverted: var(--color-neutral-900);\r\n  --fg-inverted: var(--color-white);\r\n  --primary-hover: var(--color-indigo-700);\r\n  --success: var(--color-green-700);\r\n  --border-color: var(--color-neutral-100);\r\n  --ring-destructive: var(--color-red-700);\r\n  --ring-success: var(--color-green-700);\r\n}\r\n\r\n.dark {\r\n  --background: var(--color-white);\r\n  --foreground: var(--color-neutral-900);\r\n  --card: var(--color-white);\r\n  --card-foreground: var(--color-neutral-800);\r\n  --popover: var(--color-white);\r\n  --popover-foreground: var(--color-neutral-900);\r\n  --primary: var(--color-indigo-600);\r\n  --primary-foreground: var(--color-white);\r\n  --secondary: var(--color-neutral-200);\r\n  --secondary-foreground: var(--color-neutral-800);\r\n  --muted: var(--color-neutral-50);\r\n  --muted-foreground: var(--color-neutral-800);\r\n  --accent: var(--color-indigo-100);\r\n  --accent-foreground: var(--color-indigo-700);\r\n  --destructive: var(--color-red-700);\r\n  --border: rgb(232 232 242);\r\n  --input: var(--color-neutral-300);\r\n  --ring: var(--color-indigo-700);\r\n  --chart-1: var(--color-rose-500);\r\n  --chart-2: var(--color-indigo-500);\r\n  --chart-3: var(--color-violet-400);\r\n  --chart-4: var(--color-rose-600);\r\n  --chart-5: var(--color-violet-600);\r\n  --sidebar: var(--color-white);\r\n  --sidebar-foreground: var(--color-neutral-700);\r\n  --sidebar-primary: var(--color-indigo-300);\r\n  --sidebar-primary-foreground: var(--color-indigo-800);\r\n  --sidebar-accent: var(--color-indigo-100);\r\n  --sidebar-accent-foreground: var(--color-indigo-700);\r\n  --sidebar-border: var(--color-neutral-200);\r\n  --sidebar-ring: var(--color-indigo-400);\r\n  --bg: var(--color-white);\r\n  --fg: var(--color-neutral-900);\r\n  --bg-inverted: var(--color-neutral-900);\r\n  --fg-inverted: var(--color-white);\r\n  --primary-hover: var(--color-indigo-700);\r\n  --success: var(--color-green-700);\r\n  --border-color: var(--color-neutral-100);\r\n  --ring-destructive: var(--color-red-700);\r\n  --ring-success: var(--color-green-700);\r\n}\r\n\r\n@layer base {\r\n  * {\r\n    @apply border-border outline-ring\/50;\r\n  }\r\n  body {\r\n    @apply bg-background text-foreground;\r\n  }\r\n}",
      "type": "registry:file",
      "target": "app/globals.css"
    },
    {
      "path": "registry/bellhop/theme/bellhop.css",
      "content": ":root {\r\n  --color-blue-100: rgb(209, 233, 255);\r\n  --color-blue-200: rgb(178, 221, 255);\r\n  --color-blue-25: rgb(245, 250, 255);\r\n  --color-blue-300: rgb(132, 202, 255);\r\n  --color-blue-400: rgb(83, 177, 253);\r\n  --color-blue-50: rgb(239, 248, 255);\r\n  --color-blue-500: rgb(46, 144, 250);\r\n  --color-blue-600: rgb(21, 112, 239);\r\n  --color-blue-700: rgb(23, 92, 211);\r\n  --color-blue-800: rgb(24, 73, 169);\r\n  --color-blue-900: rgb(25, 65, 133);\r\n  --color-blue-950: rgb(16, 42, 86);\r\n  --color-indigo-100: rgb(225, 234, 254);\r\n  --color-indigo-200: rgb(186, 206, 252);\r\n  --color-indigo-25: rgb(245, 248, 254);\r\n  --color-indigo-300: rgb(141, 170, 252);\r\n  --color-indigo-400: rgb(116, 152, 251);\r\n  --color-indigo-50: rgb(241, 245, 254);\r\n  --color-indigo-500: rgb(80, 104, 221);\r\n  --color-indigo-600: rgb(38, 66, 207);\r\n  --color-indigo-700: rgb(25, 48, 169);\r\n  --color-indigo-800: rgb(27, 33, 146);\r\n  --color-indigo-900: rgb(22, 27, 121);\r\n  --color-indigo-950: rgb(20, 23, 82);\r\n  --color-red-100: rgb(252, 227, 227);\r\n  --color-red-200: rgb(251, 208, 208);\r\n  --color-red-25: rgb(255, 251, 250);\r\n  --color-red-300: rgb(247, 171, 171);\r\n  --color-red-400: rgb(248, 114, 114);\r\n  --color-red-50: rgb(254, 239, 235);\r\n  --color-red-500: rgb(240, 82, 80);\r\n  --color-red-600: rgb(214, 52, 31);\r\n  --color-red-700: rgb(191, 43, 24);\r\n  --color-red-800: rgb(153, 36, 36);\r\n  --color-red-900: rgb(112, 30, 25);\r\n  --color-red-950: rgb(85, 22, 12);\r\n  --color-green-100: rgb(220, 250, 230);\r\n  --color-green-200: rgb(171, 239, 198);\r\n  --color-green-25: rgb(246, 254, 249);\r\n  --color-green-300: rgb(117, 224, 167);\r\n  --color-green-400: rgb(71, 205, 137);\r\n  --color-green-50: rgb(236, 253, 243);\r\n  --color-green-500: rgb(23, 178, 106);\r\n  --color-green-600: rgb(7, 148, 85);\r\n  --color-green-700: rgb(6, 118, 71);\r\n  --color-green-800: rgb(8, 93, 58);\r\n  --color-green-900: rgb(7, 77, 49);\r\n  --color-green-950: rgb(5, 51, 33);\r\n  --color-neutral-100: rgb(239, 241, 245);\r\n  --color-neutral-200: rgb(220, 223, 234);\r\n  --color-neutral-25: rgb(252, 252, 253);\r\n  --color-neutral-300: rgb(185, 192, 212);\r\n  --color-neutral-400: rgb(125, 137, 176);\r\n  --color-neutral-50: rgb(249, 249, 251);\r\n  --color-neutral-500: rgb(93, 107, 152);\r\n  --color-neutral-600: rgb(74, 85, 120);\r\n  --color-neutral-700: rgb(64, 73, 104);\r\n  --color-neutral-800: rgb(48, 55, 79);\r\n  --color-neutral-900: rgb(17, 19, 34);\r\n  --color-neutral-950: rgb(14, 16, 27);\r\n  --color-rose-100: rgb(245, 220, 219);\r\n  --color-rose-200: rgb(239, 195, 194);\r\n  --color-rose-25: rgb(252, 244, 243);\r\n  --color-rose-300: rgb(233, 170, 174);\r\n  --color-rose-400: rgb(227, 140, 145);\r\n  --color-rose-50: rgb(251, 240, 238);\r\n  --color-rose-500: rgb(228, 119, 137);\r\n  --color-rose-600: rgb(210, 86, 100);\r\n  --color-rose-700: rgb(200, 70, 86);\r\n  --color-rose-800: rgb(165, 44, 64);\r\n  --color-rose-900: rgb(99, 28, 40);\r\n  --color-rose-950: rgb(104, 29, 41);\r\n  --color-lime-100: rgb(230, 244, 215);\r\n  --color-lime-200: rgb(206, 234, 176);\r\n  --color-lime-25: rgb(250, 253, 247);\r\n  --color-lime-300: rgb(172, 220, 121);\r\n  --color-lime-400: rgb(134, 201, 62);\r\n  --color-lime-50: rgb(245, 251, 238);\r\n  --color-lime-500: rgb(102, 159, 42);\r\n  --color-lime-600: rgb(79, 122, 33);\r\n  --color-lime-700: rgb(63, 98, 26);\r\n  --color-lime-800: rgb(51, 80, 21);\r\n  --color-lime-900: rgb(43, 66, 18);\r\n  --color-lime-950: rgb(26, 40, 11);\r\n  --color-orange-100: rgb(253, 234, 215);\r\n  --color-orange-200: rgb(249, 219, 175);\r\n  --color-orange-25: rgb(254, 250, 245);\r\n  --color-orange-300: rgb(247, 178, 122);\r\n  --color-orange-400: rgb(243, 135, 68);\r\n  --color-orange-50: rgb(254, 246, 238);\r\n  --color-orange-500: rgb(239, 104, 32);\r\n  --color-orange-600: rgb(224, 79, 22);\r\n  --color-orange-700: rgb(185, 56, 21);\r\n  --color-orange-800: rgb(147, 47, 25);\r\n  --color-orange-900: rgb(119, 41, 23);\r\n  --color-orange-950: rgb(81, 28, 16);\r\n  --color-pink-100: rgb(251, 223, 239);\r\n  --color-pink-200: rgb(249, 200, 228);\r\n  --color-pink-25: rgb(254, 246, 251);\r\n  --color-pink-300: rgb(246, 162, 208);\r\n  --color-pink-400: rgb(241, 126, 184);\r\n  --color-pink-50: rgb(253, 242, 248);\r\n  --color-pink-500: rgb(225, 76, 148);\r\n  --color-pink-600: rgb(201, 34, 115);\r\n  --color-pink-700: rgb(183, 31, 105);\r\n  --color-pink-800: rgb(161, 27, 92);\r\n  --color-pink-900: rgb(109, 18, 62);\r\n  --color-pink-950: rgb(75, 12, 42);\r\n  --color-amber-100: rgb(254, 240, 199);\r\n  --color-amber-200: rgb(254, 223, 137);\r\n  --color-amber-25: rgb(255, 252, 245);\r\n  --color-amber-300: rgb(254, 200, 75);\r\n  --color-amber-400: rgb(253, 176, 34);\r\n  --color-amber-50: rgb(255, 250, 235);\r\n  --color-amber-500: rgb(247, 144, 9);\r\n  --color-amber-600: rgb(220, 104, 3);\r\n  --color-amber-700: rgb(181, 71, 8);\r\n  --color-amber-800: rgb(147, 55, 13);\r\n  --color-amber-900: rgb(122, 46, 14);\r\n  --color-amber-950: rgb(78, 29, 9);\r\n  --color-yellow-100: rgb(254, 247, 195);\r\n  --color-yellow-200: rgb(254, 238, 149);\r\n  --color-yellow-25: rgb(254, 253, 240);\r\n  --color-yellow-300: rgb(253, 226, 114);\r\n  --color-yellow-400: rgb(250, 197, 21);\r\n  --color-yellow-50: rgb(254, 251, 232);\r\n  --color-yellow-500: rgb(234, 170, 8);\r\n  --color-yellow-600: rgb(202, 133, 4);\r\n  --color-yellow-700: rgb(161, 92, 7);\r\n  --color-yellow-800: rgb(133, 74, 14);\r\n  --color-yellow-900: rgb(113, 59, 18);\r\n  --color-yellow-950: rgb(84, 44, 13);\r\n  --color-purple-100: rgb(235, 219, 235);\r\n  --color-purple-200: rgb(219, 189, 219);\r\n  --color-purple-25: rgb(248, 242, 248);\r\n  --color-purple-300: rgb(207, 165, 206);\r\n  --color-purple-400: rgb(187, 129, 186);\r\n  --color-purple-50: rgb(244, 235, 244);\r\n  --color-purple-500: rgb(160, 93, 168);\r\n  --color-purple-600: rgb(142, 75, 155);\r\n  --color-purple-700: rgb(125, 54, 140);\r\n  --color-purple-800: rgb(108, 49, 119);\r\n  --color-purple-900: rgb(86, 37, 95);\r\n  --color-purple-950: rgb(61, 23, 69);\r\n}\r\n\r\n.theme-scaled {\r\n  [data-slot=\"card\"] {\r\n    --spacing: 0.16rem;\r\n  }\r\n\r\n  [data-slot=\"card-header\"] *,\r\n  [data-slot=\"card-content\"] *,\r\n  [data-slot=\"card-footer\"] * {\r\n    --spacing: 0.222222rem;\r\n  }\r\n}",
      "type": "registry:file",
      "target": "app/bellhop.css"
    }
  ]
}